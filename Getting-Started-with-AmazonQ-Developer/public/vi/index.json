[
{
	"uri": "//localhost:1313/vi/1-features/",
	"title": "Amazon Q Developer features",
	"tags": [],
	"description": "",
	"content": "Amazon Q Developer is available across AWS environments and services, and also as a coding assistant in third party IDEs.\nMany of Amazon Q Developer’s capabilities exist in a chat interface, where you can use natural language to ask questions about AWS, get help with code, explore resources, or troubleshoot. When you chat with Amazon Q, Amazon Q uses the context of your current conversation to inform its responses. You can ask follow-up questions or refer to its response when you ask a new question.\nOther Amazon Q Developer features are available as a part of your workflows in AWS service consoles and supported IDEs. The following sections explain the different features of Amazon Q Developer that you might encounter across your AWS experience.\nMigration \u0026amp; Transfer Amazon Q Developer transformation web experience Amazon Q Developer’s transformation capabilities can help your enterprise discover, plan, and execute migration and modernization jobs for your legacy applications running on-premises or in the cloud.\nAnalytics Summarizing your data With Amazon Q Amazon QuickSight, you can utilize the Generative BI authoring experience, create executive summaries of your data, ask and answer questions of data, and generate data stories.\nManagement and governance Exploring nodes using text prompts Using AWS Systems Manager and Amazon Q, you can ask natural language questions about your managed nodes or instances. Amazon Q then uses the Systems Manager ListNodes action and creates filters based on your textual input to retrieve results.\nInvestigating operational issues (preview) Amazon Q Developer operational investigations enhance your ability to investigate and analyze resources, events, and activities across your AWS environment. By leveraging natural language processing, Amazon Q simplifies the process of understanding complex scenarios and relationships within your AWS account.\nAmazon Q Developer now helps you accelerate operational investigations across your AWS environment. Q looks for anomalies in your telemetry, surfaces related signals for you to explore, identifies potential root-cause hypothesis, and suggests next steps to help you remediate issues faster.\nBy integrating Amazon Q into your investigative workflows, you can accelerate problem solving, enhance your understanding of your AWS environment, and make more informed decisions about your infrastructure and applications.\nThe Amazon Q operational investigations feature is in preview release and is subject to change.\nTaking inventory of your AWS resources You can ask Amazon Q about your specific AWS account resources from anywhere in the AWS Management Console. You might not know where to locate relevant information about your resources, or you might be in one service console and want to access information about another service’s resources without disrupting your workflow.\nAmazon Q Developer answers your natural language questions about resources and provides deep links to those resources so you can quickly find them. You can ask Amazon Q to list a type of resource in your account, for details about a specific resource, or to list resources based on a criteria such as region or state.\nFor example, you may want to know how many Amazon EC2 instances you currently have running. In that case, you can ask Amazon Q your question in natural language, and it will provide an answer based on your specific resources.\nUse Amazon Q in the AWS Console Mobile Application Amazon Q is integrated with the AWS Console Mobile Application to answer questions about AWS. You configure access the same way that you get access to Amazon Q in the AWS Management Console.\nDiagnosing console errors In the AWS Management Console, Amazon Q Developer can diagnose common errors you receive while working with AWS services, such as insufficient permissions, incorrect configuration, and exceeding service limits.\nCompute Choosing Amazon Elastic Compute Cloud instances With so many Amazon EC2 instance types available, finding the right instance types for your workload can be time-consuming and complex. The Amazon Q instance type selector considers your use case, workload type, CPU manufacturer preference, and how you prioritize price and performance, as well as additional parameters that you can specify. It then uses this data to provide suggestions and guidance for Amazon EC2 instance types that are best suited to your new workloads.\nDatabases Writing database queries with natural language Amazon Q generative SQL uses generative AI to analyze user intent, query patterns, and schema metadata to identify common SQL query patterns directly within Amazon Redshift, accelerating the query authoring process for users and reducing the time required to derive actionable data insights.\nNetworking and content delivery Analyzing network troubleshooting You can use Amazon Q to help you diagnose network connectivity issues for applications that run in your Amazon VPCs. Amazon Q network troubleshooting can understand natural language queries, and works with Reachability Analyzer to provide relevant responses. With Amazon Q, you can ask network reachability questions in a conversational format.\nDeveloper tools Ask Amazon Q Developer questions about building at AWS and for assistance with software development. Amazon Q can explain coding concepts and code snippets, generate code and unit tests, and improve code, including debugging or refactoring.\nDeveloping code features After you explain, in natural language, the feature that you want to develop, Amazon Q can use the context of your current project to generate an implementation plan and the accompanying code. Amazon Q can help you build AWS projects or your own applications.\nGetting inline code suggestions Amazon Q provides you with code recommendations in real time. As you write code, Amazon Q automatically generates suggestions based on your existing code and comments.\nChatting about code in IDEs Within integrated development environments (IDEs), Amazon Q can answer questions related to the software development process, including conceptual questions about programming and how specific code works. You can also ask Amazon Q to update and improve code snippets from the chat panel. With multi-language support, you can chat with Amazon Q in any of the supported natural languages, including English, Mandarin, French, German, Italian, Japanese, Spanish, Korean, Hindi and Portuguese, with more languages available.\nReviewing your code for security vulnerabilities and quality issues Within IDEs, Amazon Q reviews your code for security vulnerabilities and code quality issues. Amazon Q can review as you code or review entire projects to monitor the security and quality of your applications throughout development.\nTransforming code Amazon Q can perform automated language and operating system (OS)-level upgrades for your applications.\nGenerating unit tests Amazon Q Developer provides an AI-powered unit test generation feature to help development teams improve code coverage throughout their software development lifecycle. The Amazon Q Developer agent for unit test generation is available in the following environments:\nAmazon Q Developer IDE extension.\nGitLab, as part of GitLab Duo.\nDeveloping software in Amazon CodeCatalyst Amazon Q Developer in CodeCatalyst includes generative AI features that can help users in projects in your space develop software faster. You can assign issues to Amazon Q or recommend tasks for Amazon Q. You can also ask Amazon Q to write a description or to summarize content.\nChatting about code in Amazon SageMaker AI Studio Amazon SageMaker AI Studio is a web-based experience for running ML workflows. You can chat with Amazon Q Developer inside Studio to get guidance on SageMaker AI features, troubleshoot JupyterLab errors, and get sample code.\nInteracting with the command line and AWS CloudShell Command Line Interface (CLI) After installing Amazon Q for the command line, you can use it to complete CLI commands as it populates contextually relevant subcommands, options and arguments. It provides AI-generated completions as you type in the command line. Additionally, you can use Amazon Q to write natural language instructions that are instantly translated to an executable shell code snippet. You can also ask Amazon Q complex questions, and it provides feedback and instructions based on the conversation, as well as context and information outside of the conversation. You can then provide permission to Amazon Q so it performs actions on your behalf. With multi-language support, you can chat with Amazon Q in any of the supported natural languages, including English, Mandarin, French, German, Italian, Japanese, Spanish, Korean, Hindi and Portuguese, with more languages available.\nAWS CloudShell You can also use Amazon Q CLI in AWS CloudShell to interact in natural language conversations, ask questions, and receive responses from Amazon Q in your terminal. You can get the related shell command that reduces the need to search for or remember syntax. With Amazon Q, you can receive command suggestions as you type in the terminal\nApplication integration Writing scripts to automate AWS services You may know exactly what to do with your AWS resources, and you may find yourself taking the same actions repeatedly. In that case, you can ask Amazon Q to write code that will automate the repetitive tasks.\nFor example, you may be working on a project that uses Amazon VPCs, Amazon EC2 instances, and Amazon RDS databases. In the course of your testing, you find that every time you create a Amazon VPC, spin up a server, and deploy a database, the configuration is the same. You always choose the same instance and database type, with the same options selected, using the same security groups, in subnets with the same NACL configuration. You don’t want to have to go through the same manual process every time you want to re-create your test conditions.\nYou can use Amazon Q’s Console-to-Code feature to automate a workflow instead of performing it manually every time. First, you activate Console-to-Code in the Amazon EC2 console. Then, Amazon Q records your actions as you go through the process of configuring and launching your instance. Finally, Amazon Q provides you with code, in a language of your choice, that automates the process you just performed.\nWriting ETL scripts and integrating data AWS Glue is a serverless data integration service that makes it easy for analytics users to discover, prepare, move, and integrate data from multiple sources.\nAmazon Q data integration in AWS Glue includes the following capabilities:\nChat – Amazon Q data integration in AWS Glue can answer natural language questions in English about AWS Glue and data integration domains like AWS Glue source and destination connectors, AWS Glue ETL jobs, Data Catalog, crawlers and AWS Lake Formation, and other feature documentation, and best practices. Amazon Q data integration in AWS Glue responds with step-by-step instructions, and includes references to its information sources.\nData integration code generation – Amazon Q data integration in AWS Glue can answer questions about AWS Glue ETL scripts, and generate new code given a natural language question in English.\nTroubleshoot – Amazon Q data integration in AWS Glue is purpose built to help you understand errors in AWS Glue jobs and provides step-by-step instructions, to root cause and resolve your issues.\nThird-party tools Using GitLab Duo with Amazon Q You can GitLab Duo with Amazon Q for your software development operations and source code management workflows. After setting up Amazon Q in GitLab Duo, you can invoke quick actions to automate tasks.\nCloud Financial Management Understanding your costs You can ask Amazon Q about your AWS bill and account costs in the AWS Management Console. Amazon Q can retrieve your cost data, explain costs, and analyze cost trends.\nCustomer support Getting customer support directly from Amazon Q Amazon Q can answer your questions about account activation, cost spikes, bill adjustment, fraud events, health events, and issues with your AWS resources.\nCreating a support ticket Amazon Q can help you create a support case and then connect you to a human support agent at AWS.\nAmazon Q in chat applications You can activate Amazon Q in your Slack and Microsoft Teams applications to ask questions about building at AWS.\n"
},
{
	"uri": "//localhost:1313/vi/",
	"title": "Khả năng quan sát với Amazon ECS",
	"tags": [],
	"description": "",
	"content": "Observability with Amazon ECS Khả năng quan sát là khả năng liên tục tạo và khám phá những thông tin chi tiết hữu ích dựa trên các tín hiệu từ hệ thống đang được theo dõi. Nói cách khác, khả năng quan sát cho phép người dùng hiểu được trạng thái của hệ thống từ các đầu ra bên ngoài của nó và thực hiện các hành động phù hợp. Ba trụ cột của khả năng quan sát là số liệu (metrics), nhật ký (logs) và dấu vết (traces):\nSố liệu (Metrics) Số liệu biểu diễn dữ liệu số được đo lường theo các khoảng thời gian. Chúng tận dụng mô hình hóa và dự đoán toán học để hiểu hành vi của hệ thống ở cả hiện tại và tương lai. Chúng hữu ích để xác định xu hướng và cho phép mô hình hóa và dự đoán toán học. Nhật ký (Logs) Nhật ký bao gồm các bản ghi được đánh dấu thời gian, bất biến, ghi lại các sự kiện rời rạc khi chúng xảy ra theo thời gian. Chúng có giá trị trong việc phát hiện các hành vi mới nổi và khó lường. Chúng đặc biệt hữu ích để khám phá các mô hình hành vi mới nổi và khó lường. Dấu vết (Traces) Dấu vết mô tả một chuỗi các sự kiện phân tán, liên kết với nhau, vạch ra hành trình đầu cuối của một yêu cầu thông qua một hệ thống phân tán. Chúng cung cấp thông tin chi tiết, chẳng hạn như độ trễ, về đường đi của một yêu cầu và cấu trúc của nó. Chúng cung cấp khả năng hiển thị cả đường đi mà một yêu cầu đã đi qua cũng như cấu trúc của một yêu cầu. Tóm lại, chúng ta có thể chia khả năng quan sát thành ba thành phần chính: CloudWatch Metrics, CloudWatch Logs và AWS X-Ray. Cùng nhau, chúng tạo thành một giải pháp khả năng quan sát toàn diện trên AWS, bao gồm giám sát số liệu, quản lý nhật ký và theo dõi phân tán. Các trụ cột này phối hợp với nhau để cung cấp cho người dùng những hiểu biết sâu sắc về hành vi, hiệu suất và độ tin cậy của môi trường và ứng dụng AWS của họ.\n"
},
{
	"uri": "//localhost:1313/vi/2-tiers-of-service/2-free-tier/",
	"title": "Amazon Q Developer Free tier",
	"tags": [],
	"description": "",
	"content": "Amazon Q Developer is available at the Free tier on AWS apps and websites, in the IDE, and on the command line. When you use the Free tier, access to Amazon Q Developer features is limited.\nIf you want to get started quickly with some Amazon Q Developer features, you can create an AWS Builder ID to use Amazon Q Developer in the IDE or on the command line. Builder ID is the authentication that we recommend for exploring the Free tier of Amazon Q Developer.\nTo use Amazon Q Developer at the Free tier on AWS websites, sign in to your AWS account to try chat and other features in the AWS Management Console. Not all Amazon Q console features are available at the Free tier.\nAt the Free tier, your content may be used to improve Amazon Q Developer.\nTo upgrade from the Free tier to the Pro tier, you must subscribe to Amazon Q Developer.\nThe following table describes what features of Amazon Q Developer at the Free tier are available to you, depending on your sign in or authentication method:\nFree tier access type Amazon Q Developer feature AWS Builder ID IAM Identity Center IAM federation/principals Amazon Q on AWS websites ❌No ✅Yes ✅Yes Amazon Q Developer in the IDE ✅Yes ❌No ❌No Amazon Q Developer on the command line ✅Yes ❌No ❌No For details about the features available at the Free tier, see the Amazon Q Developer pricing page.\n"
},
{
	"uri": "//localhost:1313/vi/2-tiers-of-service/1-pro-tier/",
	"title": "Amazon Q Developer Pro tier",
	"tags": [],
	"description": "",
	"content": "With a paid subscription to the Amazon Q Developer Pro tier, your workforce users can access all features of Amazon Q Developer, including ML-assisted software development in your IDE and chatting with Amazon Q in the AWS Management Console without hard monthly limits.\nThis section describes how to set up and manage Amazon Q Developer Pro tier subscriptions.\nFor more information on what you can access with the Pro tier, see the Amazon Q Developer pricing page.\n"
},
{
	"uri": "//localhost:1313/vi/2-tiers-of-service/",
	"title": "Tiers of service for Amazon Q Developer",
	"tags": [],
	"description": "",
	"content": "When you use Amazon Q Developer, you either use Amazon Q Developer Pro, which is a paid subscription service, or you use Amazon Q Developer at the Free tier. Review the following information to understand what\u0026rsquo;s offered at each tier.\nAmazon Q Developer Pro tier – The Pro tier is a paid version of the Amazon Q Developer service. This gives you access to advanced features, such as customization, as well as higher usage limits. To use Amazon Q Developer Pro, you must be a user in IAM Identity Center, and your administrator must subscribe you to Amazon Q Developer Pro.\nAmazon Q Developer Free tier – Amazon Q Developer offers a perpetual Free tier with monthly limits, including for users authenticating with AWS Builder ID. The features available to you depends on your interface and on how you authenticate.\nFor more information about pricing tiers and feature availability, see the Amazon Q Developer pricing page.\n"
},
{
	"uri": "//localhost:1313/vi/3-getting-started/2-operational-investigations/",
	"title": "Installing Amazon Q for command line",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/3-getting-started/1-in-visual-studio-code/",
	"title": "Supported command line environments",
	"tags": [],
	"description": "",
	"content": "The autocomplete feature of Amazon Q for command line is supported on macOS and specific Linux environments, including AppImage and Ubuntu.\nThe following environments are supported for both macOS and Linux:\nShells: bash, zsh, fish\nCLIs: Over 500 of the most popular CLIs such as git, aws, docker, npm, and yarn\nmacOS Amazon Q for command line integrates with the following environments for macOS:\nTerminal emulators: iTerm2, macOS terminal, Hyper, Alacritty, Kitty, WezTerm. To see the full list of terminals, see the Amazon Q for command line open source code.\nIDEs: VS Code terminal, Jetbrains terminals (except Fleet)\nmacOS 10.15 (Catalina) or later\nArchitecture: x86_64 (Intel) or arm64 (Apple Silicon)\nLinux Amazon Q for command line integrates with the following environments for Linux:\nPlatform requirements: Amazon Q for command line for Linux supports Ubuntu 22 and 24, and compatibility for a subset of features on Ubuntu 20. It may otherwise work with GNOME v42+ or environments where the display server is Xorg and the input method framework is IBus.\nTerminal emulators: GnomeConsole, GnomeTerminal, Kitty, Hyper, WezTerm, Alacritty, Tilix, Terminator\nArchitecture: x86_64 or aarch64\nNote: Desktop functionality is currently only available on x86_64 architecture\nWindows Amazon Q for command line works in Linux environments running the Windows Subsystem for Linux (WSL). This environment supports autocomplete, which requires a full installation and terminal specific support. It also supports inline completion for zsh, which works with a minimal installation and is terminal agnostic. A full installation provides a GUI dashboard while minimal installation doesn\u0026rsquo;t.\nNatural languages Amazon Q Developer provides multi-natural-language support for the Amazon Q Developer command-line interface (CLI). Some of the supported natural languages include Mandarin, French, German, Italian, Japanese, Spanish, Korean, Hindi, and Portuguese, with more languages available.\nTo utilize this functionality, you can initiate a conversation with Amazon Q Developer using your preferred natural language. Amazon Q automatically detects the language and provides responses in the appropriate language.\n"
},
{
	"uri": "//localhost:1313/vi/3-getting-started/",
	"title": "Using Amazon Q Developer on the command line",
	"tags": [],
	"description": "",
	"content": "You can use Amazon Q Developer to enable completions for hundreds of popular CLIs like git, npm, docker, and aws. Amazon Q for command line integrates contextual information, providing Amazon Q with an enhanced understanding of your use case, enabling it to provide relevant and context-aware responses. As you begin typing, Amazon Q populates contextually relevant subcommands, options, and arguments.\nYou can install Amazon Q for command line on macOS and specific Linux environments, including AppImage and Ubuntu packages, which provides features such as autocompletion, Amazon Q chat, and inline zsh completion. You can work with Amazon Q CLI to do the following:\nCommand line interface to chat through natural language conversations, questions, and responses within your terminal environment.\nTranslate natural language instructions to executable shell code snippets.\nInline suggestions as you type in your command prompt, with completions to popular CLIs.\n"
},
{
	"uri": "//localhost:1313/vi/4-conclusion/",
	"title": "Kết luận",
	"tags": [],
	"description": "",
	"content": "Tóm lại, khả năng quan sát đóng vai trò là một năng lực quan trọng đối với các hệ thống hiện đại và phức tạp. Nó trao quyền cho chúng ta vượt xa việc giám sát đơn thuần bằng cách liên tục tạo ra và cho phép khám phá các thông tin chi tiết hữu ích có được từ các tín hiệu hệ thống. Điều này cho phép hiểu sâu sắc về trạng thái bên trong của hệ thống thông qua các biểu hiện bên ngoài của nó, tạo điều kiện cho các can thiệp sáng suốt và kịp thời.\nBa trụ cột nền tảng của khả năng quan sát – số liệu (metrics), nhật ký (logs) và dấu vết (traces) – mỗi trụ cột đóng góp một cách độc đáo vào sự hiểu biết này:\nMetrics cung cấp dữ liệu định lượng theo chuỗi thời gian, rất cần thiết cho việc xác định xu hướng, lập kế hoạch dung lượng và phân tích dự đoán. Logs cung cấp các bản ghi bất biến, được đánh dấu thời gian về các sự kiện rời rạc, chứng tỏ vô giá trong việc chẩn đoán các hành vi mới nổi và khó lường. Traces map the end-to-end journey của các yêu cầu trên các hệ thống phân tán, tiết lộ các điểm nghẽn về độ trễ và luồng hoạt động phức tạp. Trên nền tảng AWS, các trụ cột này được giải quyết một cách toàn diện thông qua CloudWatch Metrics, CloudWatch Logs và AWS X-Ray. Hoạt động đồng bộ, các dịch vụ này tạo thành một giải pháp khả năng quan sát mạnh mẽ, cung cấp khả năng hiển thị sâu sắc về hành vi, hiệu suất và độ tin cậy tổng thể của môi trường AWS và các ứng dụng mà chúng lưu trữ. Bằng cách tận dụng hiệu quả các công cụ này, người dùng có thể chủ động quản lý hệ thống của mình, tối ưu hóa hiệu suất và đảm bảo một bối cảnh vận hành linh hoạt và đáng tin cậy.\nCác Bước Tiếp Theo Tiếp tục hành trình học tập Amazon ECS của bạn bằng cách khám phá các module workshop chuyên biệt sau:\nAuto Scaling - Tìm hiểu cách tự động điều chỉnh quy mô ứng dụng của bạn một cách linh hoạt Networking - Nắm vững các khái niệm và cách triển khai mạng trong ECS Observability - Triển khai các giải pháp giám sát toàn diện Security - Triển khai các biện pháp kiểm soát bảo mật mạnh mẽ và các phương pháp hay nhất Automation - Tối ưu hóa quy trình triển khai Storage - Tích hợp Amazon EFS cho lưu trữ bền bỉ Mỗi module cung cấp trải nghiệm thực hành chi tiết để giúp bạn xây dựng các ứng dụng ECS sẵn sàng cho môi trường production.\nNgười đóng góp Lê Minh Nghĩa - https://www.linkedin.com/in/minhnghia2k3/\nTrần Đoàn Công Lý - https://www.linkedin.com/in/trandoancongly/\nTài liệu tham khảo Container Insights OpenTelemetry "
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]