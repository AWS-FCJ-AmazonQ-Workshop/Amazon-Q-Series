[
{
	"uri": "//localhost:1313/1-features/",
	"title": "Amazon Q Developer Features",
	"tags": [],
	"description": "",
	"content": "Amazon Q Developer Features Overview ℹ️ Information: Amazon Q Developer is available across AWS environments and services, and as a coding assistant in third-party IDEs. The service provides a natural language chat interface for AWS interactions, comprehensive code assistance, resource exploration, and intelligent troubleshooting.\nCore Development Capabilities Code Development and Generation ℹ️ Information: Amazon Q Developer provides comprehensive development assistance:\nInline Code Completion Real-time suggestions as you type Multi-language support (15+ languages including Java, Python, TypeScript, Go, Rust, C#) Context-aware completions based on your project Framework-specific suggestions for popular libraries and frameworks Code Generation and Explanation Natural language to code conversion Function and class generation from descriptions Code explanation and documentation Refactoring suggestions and improvements Advanced Development Features Software Development Agent (/dev): Plan and implement features across multiple files Code Transformation Agent (/transform): Upgrade Java applications (Java 8/11 to Java 17) Unit test generation with comprehensive coverage Code review and optimization suggestions Security and Quality Assurance ℹ️ Information: Amazon Q Developer includes robust security features:\nSecurity Vulnerability Scanning Multi-language support (Java, Python, TypeScript, C#, JavaScript, Go, Ruby, PHP, C, C++) Real-time vulnerability detection Remediation suggestions with code fixes Security best practices guidance Code Quality Features Code reference tracking for generated code Attribution logging for training data similarities Best practices enforcement Performance optimization recommendations AWS Integration Capabilities Migration and Modernization ℹ️ Information: Amazon Q Developer\u0026rsquo;s transformation capabilities assist enterprises in:\nLegacy application discovery and analysis Migration strategy planning and execution Modernization job management Hybrid cloud workload optimization Resource Management AWS Resource Inventory ℹ️ Information: Amazon Q Developer provides:\nNatural language queries about AWS resources Deep links to relevant resources in the console Resource filtering by type, state, or region Cost and usage insights EC2 Instance Selection ℹ️ Information: Amazon Q Developer helps you:\nFind optimal instance types for your workload Balance price and performance requirements Consider CPU manufacturer preferences (Intel, AMD, Graviton) Analyze workload patterns for right-sizing Operational Excellence Node Exploration ℹ️ Information: Using AWS Systems Manager and Amazon Q Developer, you can:\nQuery managed nodes using natural language Filter results based on textual criteria Retrieve detailed node information Automate node management tasks Operational Investigations (Preview) ℹ️ Information: Amazon Q Developer operational investigations enhance your ability to:\nInvestigate and analyze AWS resources Monitor events and activities across services Understand complex scenarios and dependencies Identify relationships within your AWS environment ⚠️ Preview Feature: Amazon Q operational investigations is in preview and subject to change.\nData and Analytics Database Capabilities Natural Language Query Generation ℹ️ Information: Amazon Q generative SQL capabilities:\nAnalyze user intent from natural language Generate optimized queries for your database Process schema metadata intelligently Accelerate query authoring in Amazon Redshift and other databases Business Intelligence Amazon QuickSight Integration ℹ️ Information: Amazon Q in QuickSight enables:\nGenerative BI authoring with natural language Executive data summaries and insights Automated data story generation Interactive dashboard creation Networking and Infrastructure Network Troubleshooting ℹ️ Information: Amazon Q Developer assists with:\nVPC connectivity diagnostics and analysis Natural language network queries Reachability analysis between resources Conversational troubleshooting workflows Infrastructure as Code ℹ️ Information: Amazon Q Developer supports:\nAWS CloudFormation template generation and optimization AWS CDK code generation and best practices Terraform configuration assistance Infrastructure troubleshooting and optimization Integration and Automation Application Integration AWS Service Automation ℹ️ Information: Amazon Q Developer enables:\nWorkflow automation across AWS services Console-to-Code conversion for repeatability Custom script generation for common tasks Resource configuration automation Data Integration ℹ️ Information: Amazon Q Developer in AWS Glue provides:\nNatural language chat support for ETL workflows ETL script generation and optimization Data pipeline troubleshooting Best practices guidance for data processing Third-Party Integrations GitLab Integration ℹ️ Information: Amazon Q Developer integrates with GitLab Duo for:\nSoftware development operations optimization Source code management assistance CI/CD pipeline automation Workflow optimization suggestions IDE Integration ℹ️ Information: Within IDEs, Amazon Q Developer offers:\nReal-time code suggestions and completions Multi-language support across popular languages Code review capabilities and feedback Automated security scanning Version upgrade assistance Command Line and Cloud Shell CLI Features ℹ️ Information: Amazon Q Developer CLI features include:\nContextual command completion based on your environment Natural language to shell command translation Complex query handling with intelligent parsing Multi-platform support (Linux, macOS, Windows) AWS CloudShell Integration ℹ️ Information: In AWS CloudShell, Amazon Q Developer provides:\nPre-configured environment with AWS CLI and tools Contextual assistance for AWS operations Script generation for common tasks Interactive troubleshooting support Cost Management and Optimization Cloud Financial Management Cost Analysis ℹ️ Information: Amazon Q Developer helps you:\nQuery AWS billing information naturally Analyze cost trends and patterns Explain cost components and drivers Retrieve detailed account cost data Optimize resource usage for cost efficiency Support and Customer Service Customer Support Integration ℹ️ Information: Amazon Q Developer provides support for:\nAccount activation and setup assistance Cost analysis and billing inquiries Bill adjustment requests and explanations Fraud detection and security alerts Health monitoring and system status Resource troubleshooting and optimization Support Ticket Management ℹ️ Information: Amazon Q Developer assists with:\nSupport case creation with detailed context Human agent connection when needed Issue documentation and tracking Resolution tracking and follow-up Chat Application Integration ℹ️ Information: Amazon Q Developer is available in:\nSlack workspaces for team collaboration Microsoft Teams for enterprise communication AWS-specific chat interfaces for technical discussions Getting the Most from Amazon Q Developer Best Practices Be specific in your questions and requests Provide context about your project and requirements Use natural language - no need for technical jargon Iterate and refine your requests for better results Leverage multi-modal capabilities with code, text, and documentation Tips for Success Start with simple requests and build complexity Review generated code before implementation Use security scanning regularly during development Take advantage of IDE integration for seamless workflow Explore different interfaces to find what works best for your team "
},
{
	"uri": "//localhost:1313/2-tiers-of-service/1-pro-tier/",
	"title": "Amazon Q Developer Pro Tier",
	"tags": [],
	"description": "",
	"content": "Amazon Q Developer Pro Tier Overview With a paid subscription to the Amazon Q Developer Pro tier, your workforce users can access all advanced features of Amazon Q Developer, including unlimited ML-assisted software development in your IDE and comprehensive chatting capabilities with Amazon Q in the AWS Management Console without monthly usage limits.\nThe Pro tier is designed for professional development teams and enterprise organizations that require advanced features, enhanced security controls, and unlimited usage capabilities.\nKey Benefits Unlimited Usage No monthly limits on code completions and suggestions Unlimited chat interactions with extended context awareness Full access to all Amazon Q Developer features Priority processing for faster response times Advanced AI Capabilities Software Development Agent (/dev): Plan and implement multi-file features automatically Code Transformation Agent (/transform): Upgrade Java applications (Java 8/11 to Java 17) Enhanced security scanning across 10+ programming languages Custom model fine-tuning capabilities (where available) Enterprise Features IAM Identity Center integration for centralized user management Advanced security controls and compliance features Audit logging and detailed usage analytics Custom guardrails and organizational policy enforcement Administrative controls for team and user management Team Collaboration Shared knowledge bases and organizational context Team-wide best practices and coding standards Collaborative development workflows Cross-team visibility and reporting Setting Up Amazon Q Developer Pro Prerequisites IAM Identity Center must be configured in your AWS organization Administrative privileges to subscribe users to Pro tier AWS Organizations setup (recommended for enterprise deployments) Subscription Options You have three options for subscribing users to Amazon Q Developer Pro, depending on your AWS account structure:\nStandalone Account If you have a standalone AWS account:\nUse this option for quick evaluation of Amazon Q Developer Pro features Suitable for small teams or proof-of-concept deployments See Subscribe users in a standalone account Management Account (AWS Organizations) If you have a management account in AWS Organizations:\nRecommended for large enterprise deployments Centralized billing and user management Organization-wide policy enforcement See Subscribe users to Amazon Q Developer Pro in a management account Member Account (AWS Organizations) If you have a member account in AWS Organizations:\nSuitable for departmental or team-specific deployments Requires coordination with organization management See Subscribe users to Amazon Q Developer Pro in a member account Multi-Region and Multi-Account Considerations For complex enterprise deployments, you may need to:\nSubscribe users across multiple AWS Regions: Subscribe users to Amazon Q Developer Pro across AWS Regions Manage subscriptions across your organization: Subscribe users to Amazon Q Developer Pro across your organization Managing Pro Tier Subscriptions Administrative Tasks User Management Add and remove users from Pro tier subscriptions Monitor usage patterns and adoption metrics Configure user permissions and access controls Manage billing and cost allocation Security and Compliance Configure encryption methods for data protection Set up audit logging for compliance requirements Implement custom guardrails for organizational policies Monitor security scanning results and remediation Regional Support and Billing Region availability: Amazon Q Developer Pro Region support Billing management: Amazon Q Developer Pro subscription billing Subscription status tracking: Amazon Q Developer subscription statuses Configuration and Customization Account Management Account details: Managing account details in Amazon Q Developer Encryption configuration: Managing the encryption method in Amazon Q Developer Profile Management User profiles: Amazon Q Developer profiles Profile sharing: Enabling profile sharing in Amazon Q Developer Monitoring and Troubleshooting Subscription Management Aggregated subscription view: Viewing an aggregated list of Amazon Q Developer subscriptions Troubleshooting guide: Troubleshooting Amazon Q Developer Pro subscriptions User removal: Unsubscribing users from Amazon Q Developer Pro Best Practices for Pro Tier Deployment Planning Your Deployment Assess your organization\u0026rsquo;s needs and identify key user groups Plan your AWS Organizations structure for optimal management Define governance policies and usage guidelines Establish monitoring and reporting procedures Create training and onboarding programs for users Security Considerations Implement least privilege access for administrative functions Configure appropriate encryption for sensitive data Set up comprehensive audit logging for compliance Regular security reviews and policy updates Monitor usage patterns for anomalies Cost Optimization Monitor subscription usage and optimize user assignments Implement cost allocation tags for departmental billing Regular usage reviews to identify optimization opportunities Set up billing alerts for cost management Evaluate ROI through productivity metrics Getting Started Checklist For Administrators Set up IAM Identity Center in your organization Choose appropriate subscription model (standalone, management, or member account) Configure encryption and security settings Subscribe initial user group to Pro tier Set up monitoring and reporting dashboards Create user onboarding documentation Establish support and troubleshooting procedures For Users Receive Pro tier subscription from administrator Install Amazon Q Developer extensions in preferred IDEs Sign in with IAM Identity Center credentials Complete initial setup and configuration Explore advanced features (/dev and /transform agents) Join team collaboration spaces Attend training sessions and workshops Support and Resources Getting Help AWS Support: Priority support for Pro tier subscribers Documentation: Comprehensive guides and tutorials Community Forums: Connect with other Amazon Q Developer users Training Resources: Official AWS training courses and certifications Staying Updated Feature announcements: Subscribe to AWS blogs and newsletters Release notes: Stay informed about new capabilities Best practices: Regular updates from AWS solutions architects Community contributions: Learn from other organizations\u0026rsquo; experiences For detailed pricing information and feature comparisons, visit the Amazon Q Developer pricing page.\nNote: Understanding AWS Organizations concepts is helpful for enterprise deployments. See Terminology and concepts for AWS Organizations and What is AWS Organizations? for more information.\n"
},
{
	"uri": "//localhost:1313/",
	"title": "Getting started with Amazon Q Developer",
	"tags": [],
	"description": "",
	"content": "Getting Started with Amazon Q Developer What is Amazon Q Developer? ℹ️ Information: Amazon Q Developer is a generative AI-powered conversational assistant that helps you understand, build, extend, and operate AWS applications. It provides contextually relevant and actionable answers about AWS architecture, resources, best practices, documentation, and support.\nWhen integrated into your development environment (IDE), Amazon Q Developer provides comprehensive software development assistance through:\nCode chat and explanations - Interactive code discussions and detailed explanations Inline code completions - Real-time code suggestions as you type New code generation - Generate entire functions and code blocks from natural language Security vulnerability scanning - Automated detection of security issues in your code Code upgrades and improvements - Modernize and optimize existing codebases Multi-file feature implementation - Plan and implement features across your entire project ℹ️ Information: Amazon Q Developer is powered by Amazon Bedrock, a fully managed service that provides foundation models (FMs) through an API. The model has been enhanced with high-quality AWS content to deliver complete, actionable, and well-referenced answers.\n🔒 Security Note: Amazon Q Developer is built on Amazon Bedrock and includes automated abuse detection to enforce safety, security, and responsible AI use.\nGetting Started with Amazon Q Developer You can access Amazon Q Developer through multiple interfaces to fit your workflow:\nAWS Apps and Websites Prerequisites:\nAdd the necessary permissions to your IAM identity Select the Amazon Q icon to start chatting in: AWS Management Console AWS Documentation website AWS website AWS Console Mobile Application ℹ️ Information: For detailed instructions, see Using Amazon Q Developer on AWS apps and websites.\nIntegrated Development Environments (IDEs) Download the Amazon Q extension and sign in using your AWS Builder ID (no AWS account required) for free access.\nSupported IDEs:\nVisual Studio Code Installation and Configuration Guide: JetBrains IDEs (IntelliJ IDEA, PyCharm, WebStorm, etc.) Installation and Configuration Guide: Visual Studio (AWS Toolkit) Eclipse IDEs (Preview) ℹ️ Information: Click the Amazon Q icon in your IDE to start chatting or initiate development workflows. For more information, see Installing the Amazon Q Developer extension or plugin in your IDE.\nCommand Line Interface Amazon Q Developer is available for command line use across multiple platforms:\nSupported Platforms:\nmacOS Linux AppImage Ubuntu Key CLI Features:\nNatural language to shell command translation Contextual command completion Multi-language support Complex query handling ℹ️ Information: For detailed instructions, see Using Amazon Q Developer on the command line.\nChat Applications Integrate Amazon Q Developer into your team\u0026rsquo;s communication workflow:\nPrerequisites:\nAdd the AmazonQDeveloperAccess managed policy to your IAM identity Configure channel guardrails for your chat applications Supported Platforms:\nMicrosoft Teams Slack AWS-specific chat interfaces ℹ️ Information: For detailed instructions, see Chatting with Amazon Q Developer in chat applications.\nAmazon Q Developer Pricing Amazon Q Developer offers flexible pricing options:\nFree Tier Monthly usage limits with generous allowances Basic features and capabilities AWS Builder ID authentication Individual developer use Amazon Q Developer Pro Advanced features and customization Higher usage limits Team collaboration features Enterprise-grade security and compliance ℹ️ Information: For detailed pricing information, see Amazon Q Developer pricing.\nWhat\u0026rsquo;s New in Amazon Q Developer Recent Enhancements Software Development Agent (/dev): Automatically plan and implement features across multiple files Code Transformation Agent (/transform): Upgrade Java applications from Java 8/11 to Java 17 Enhanced Security Scanning: Support for 10+ programming languages Improved Code Generation: Better context awareness and accuracy AWS Resource Integration: Direct integration with AWS services and resources Migration from Amazon CodeWhisperer Amazon CodeWhisperer capabilities are now fully integrated into Amazon Q Developer, including:\nInline code suggestions Security vulnerability scanning Code reference tracking Multi-language support All existing CodeWhisperer users can seamlessly transition to Amazon Q Developer with enhanced capabilities.\n"
},
{
	"uri": "//localhost:1313/2-tiers-of-service/2-free-tier/",
	"title": "Amazon Q Developer Free Tier",
	"tags": [],
	"description": "",
	"content": "Amazon Q Developer Free Tier Overview Amazon Q Developer is available at the Free tier across AWS apps and websites, in IDEs, and on the command line. The Free tier provides generous access to core Amazon Q Developer features with monthly usage limits, making it perfect for individual developers, students, and those exploring AI-assisted development.\nKey Benefits of Free Tier No Cost Access Completely free - no subscription fees or hidden charges Perpetual access - use Amazon Q Developer indefinitely No AWS account required for IDE and command line usage Generous monthly limits for core features Core Development Features Code completions with intelligent suggestions Chat interface for coding questions and explanations Security vulnerability scanning (basic level) Code generation from natural language descriptions Multi-language support across popular programming languages Easy Getting Started AWS Builder ID authentication - simple, free sign-up process Quick IDE integration - install and start using immediately Command line access across multiple platforms No corporate setup required - perfect for individual use Authentication Methods and Access The Free tier supports different authentication methods depending on how you want to use Amazon Q Developer:\nAWS Builder ID (Recommended) Best for: Individual developers, students, personal projects\nAccess includes:\n✅ Amazon Q Developer in IDEs (VS Code, JetBrains, etc.) ✅ Amazon Q Developer on command line (macOS, Linux, Ubuntu) ❌ Limited AWS website access Benefits:\nNo AWS account required - completely independent sign-up Quick setup - create Builder ID in minutes Full IDE integration with all supported development environments Command line capabilities with natural language translation IAM Identity Center Best for: Enterprise users with organizational AWS accounts\nAccess includes:\n✅ Amazon Q on AWS websites and console ❌ No IDE access at Free tier (requires Pro tier upgrade) ❌ No command line access at Free tier IAM Federation/Principals Best for: Users with existing AWS account access\nAccess includes:\n✅ Amazon Q on AWS websites and console ❌ No IDE access at Free tier ❌ No command line access at Free tier Feature Availability Matrix Amazon Q Developer Feature AWS Builder ID IAM Identity Center IAM Federation/Principals AWS Websites \u0026amp; Console Limited ✅ Yes ✅ Yes IDE Integration ✅ Yes ❌ No ❌ No Command Line Interface ✅ Yes ❌ No ❌ No Code Completions Monthly limits Limited Limited Chat Interactions Monthly limits Limited Limited Security Scanning Basic Basic Basic Code Generation Monthly limits Limited Limited Monthly Usage Limits The Free tier includes generous monthly allowances for:\nCode Development Code completions: Substantial monthly allowance for inline suggestions Chat interactions: Limited conversations per month for coding assistance Code generation: Monthly limit on AI-generated code blocks Security scans: Basic vulnerability detection with monthly limits AWS Integration Resource queries: Limited natural language queries about AWS resources Console assistance: Basic help and guidance in AWS Management Console Documentation access: Unlimited access to contextual help and documentation Getting Started with Free Tier Step 1: Choose Your Authentication Method For Individual Developers (Recommended):\nCreate an AWS Builder ID No AWS account required Access to IDE and command line features For Enterprise Users:\nUse existing IAM Identity Center or AWS account credentials Access to AWS console features Consider Pro tier upgrade for full IDE access Step 2: Install Amazon Q Developer For IDEs (AWS Builder ID required):\nInstall extension in Visual Studio Code, JetBrains IDEs, or other supported environments Sign in with your AWS Builder ID Start coding with AI assistance For Command Line (AWS Builder ID required):\nDownload Amazon Q Developer for your platform (macOS, Linux, Ubuntu) Authenticate with AWS Builder ID Begin using natural language command translation For AWS Console (AWS account required):\nSign in to AWS Management Console Look for Amazon Q icon in supported services Start chatting for AWS assistance Step 3: Explore Features Try code completion - start typing and see AI suggestions Use the chat interface - ask questions about your code Run security scans - check for vulnerabilities in your projects Generate code - describe what you want in natural language Monitor usage - track your monthly limits through the dashboard Limitations and Considerations Usage Limits Monthly caps on core features - limits reset each month Feature restrictions compared to Pro tier No access to advanced agents (/dev and /transform) Limited AWS console integration Content Usage Policy Important: At the Free tier, your content may be used to improve Amazon Q Developer services. This includes:\nCode snippets and completions Chat conversations and queries Usage patterns and feedback If you require data privacy guarantees, consider upgrading to the Pro tier.\nSupport Limitations Community support through forums and documentation Self-service resources and tutorials No priority support or dedicated assistance Limited troubleshooting compared to Pro tier Upgrading to Pro Tier When to Consider Upgrading Exceeded monthly limits regularly Need unlimited usage for professional development Require advanced features like /dev and /transform agents Want full AWS console integration Need enterprise security and compliance features Require priority support and assistance Upgrade Process Contact your AWS administrator (for enterprise users) Set up IAM Identity Center in your organization Subscribe to Pro tier through AWS console Transition authentication from Builder ID to corporate credentials Access advanced features immediately Best Practices for Free Tier Maximize Your Usage Plan your development sessions to make the most of monthly limits Use chat efficiently - ask specific, well-formed questions Leverage code completion for maximum productivity gains Regular security scanning to catch issues early Prepare for Growth Track your usage patterns to understand when you might need Pro tier Experiment with different features to find what works best Build good AI-assisted development habits early Consider team needs for future Pro tier planning Stay Informed Monitor usage dashboard to track monthly limits Subscribe to AWS updates for new features and improvements Join community forums to learn from other users Explore documentation to discover new capabilities Frequently Asked Questions Can I use Free tier for commercial projects? Yes, the Free tier can be used for commercial development, but be aware of the content usage policy and monthly limits.\nWhat happens when I reach monthly limits? Features become unavailable until the next monthly reset. Consider upgrading to Pro tier for unlimited access.\nCan I switch between authentication methods? Yes, but access to different features varies by authentication method. Plan your workflow accordingly.\nIs my code secure with Free tier? Amazon Q Developer follows AWS security best practices, but content may be used for service improvement. Pro tier offers additional privacy guarantees.\nFor detailed feature comparisons and current pricing, visit the Amazon Q Developer pricing page.\n"
},
{
	"uri": "//localhost:1313/2-tiers-of-service/",
	"title": "Amazon Q Developer Service Tiers",
	"tags": [],
	"description": "",
	"content": "Amazon Q Developer Service Tiers Overview ℹ️ Information: Amazon Q Developer offers two distinct service tiers designed to meet different user needs and organizational requirements. Each tier provides specific features and capabilities based on your subscription level and use case.\nService Tier Comparison Amazon Q Developer Free Tier ℹ️ Information: The Free tier provides perpetual access with monthly usage limits, perfect for individual developers and small projects:\nKey Features Monthly usage limits with generous allowances Basic code completion and suggestions Security vulnerability scanning (limited) AWS Builder ID authentication (no AWS account required) IDE integration with core features Command line access with basic functionality Supported Interfaces Visual Studio Code with Amazon Q extension JetBrains IDEs (IntelliJ IDEA, PyCharm, WebStorm, etc.) Command line interface on macOS, Linux, and Ubuntu Limited AWS Management Console access Usage Limits Code completions: Generous monthly allowance Chat interactions: Limited monthly conversations Security scans: Basic vulnerability detection Feature implementations: Limited /dev agent usage Amazon Q Developer Pro Tier ℹ️ Information: The Pro tier is a paid subscription service that provides advanced features and higher limits for professional development teams:\nAdvanced Features Unlimited code completions and suggestions Advanced chat capabilities with extended context Comprehensive security scanning across 10+ languages Software Development Agent (/dev) for multi-file feature implementation Code Transformation Agent (/transform) for application upgrades Custom model fine-tuning (where available) Team collaboration features Priority support and faster response times Enterprise Capabilities IAM Identity Center integration for centralized user management Advanced security controls and compliance features Audit logging and usage analytics Custom guardrails and policy enforcement Administrative controls for team management Full Platform Access Complete AWS Management Console integration All IDE features without restrictions Advanced command line capabilities Chat application integration (Slack, Microsoft Teams) API access for custom integrations Authentication and Access Free Tier Authentication ℹ️ Information: Free tier users can access Amazon Q Developer using:\nAWS Builder ID (recommended for individual developers) Personal AWS account (basic features only) No corporate account required Pro Tier Authentication ⚠️ Important: To use Amazon Q Developer Pro, you must:\nBe a user in IAM Identity Center within your organization Have an administrator subscribe you to the Pro tier Use corporate AWS account credentials Follow organizational policies and guardrails Feature Availability Matrix Feature Free Tier Pro Tier Code Completions Limited monthly Unlimited Chat Interactions Limited monthly Unlimited Security Scanning Basic Advanced (10+ languages) /dev Agent Limited usage Full access /transform Agent Not available Full access AWS Console Integration Limited Full access Team Features Not available Full access Custom Guardrails Not available Available Priority Support Not available Available API Access Not available Available Choosing the Right Tier Free Tier is Ideal For: Individual developers learning AWS and coding Students and educators exploring AI-assisted development Small personal projects with basic requirements Proof of concept and experimentation Getting started with Amazon Q Developer Pro Tier is Recommended For: Professional development teams with active projects Enterprise organizations requiring advanced security Production applications needing comprehensive support Teams requiring collaboration features Organizations with compliance requirements High-volume usage scenarios Getting Started with Each Tier Starting with Free Tier Create an AWS Builder ID (if you don\u0026rsquo;t have one) Install Amazon Q extension in your preferred IDE Sign in with your Builder ID Start coding with AI assistance Monitor your usage through the dashboard Upgrading to Pro Tier Contact your AWS administrator to request Pro access Ensure IAM Identity Center setup in your organization Administrator subscribes your user to Pro tier Sign in with corporate credentials Access advanced features immediately Cost Considerations Free Tier Costs No subscription fee - completely free AWS resource usage may apply for AWS services you use No hidden charges for Amazon Q Developer features Pro Tier Costs Monthly subscription fee per user Transparent pricing with no usage-based charges for core features Additional AWS service costs may apply Volume discounts available for large organizations 💡 Pro Tip: For detailed pricing information and cost calculators, visit the Amazon Q Developer pricing page.\nMigration and Transition From CodeWhisperer to Amazon Q Developer ℹ️ Information: Existing Amazon CodeWhisperer users can seamlessly transition:\nAll CodeWhisperer features are now part of Amazon Q Developer Free tier remains free for individual developers Enhanced capabilities available immediately No action required for existing users Tier Upgrades and Downgrades Upgrade anytime from Free to Pro tier Downgrade considerations - some features will be limited Data retention policies apply during transitions Administrator approval required for Pro tier changes Support and Resources Free Tier Support Community forums and documentation Self-service resources and tutorials Basic troubleshooting guides GitHub issues for bug reports Pro Tier Support Priority technical support with faster response times Dedicated customer success resources Advanced troubleshooting assistance Direct access to Amazon Q Developer team ℹ️ Information: Both tiers include access to comprehensive documentation, tutorials, and community resources to help you get the most from Amazon Q Developer.\n"
},
{
	"uri": "//localhost:1313/3-getting-started/1-in-visual-studio-code/",
	"title": "Amazon Q Developer in Visual Studio Code",
	"tags": [],
	"description": "",
	"content": "Install the Amazon Q extension in Visual Studio Code Visual Studio Code is a lightweight but powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux. Ensure you have installed Visual Studio Code for your operating system. You can find the setup steps in their official documentation.\nInstall the Amazon Q extension Open Visual Studio Code Click on Extensions on the left activity bar. In the extensions, search for \u0026ldquo;Amazon Q\u0026rdquo;. Select Install the extension, restart/reload VSCode if required. Authenticate You have 2 options to sign-in and this workshop explores both the authentication methods:\nwith Builder ID for Individual users with Free Tier with AWS IAM Identity Center for Professional users with Pro Tier You might use a workforce identity in IAM Identity Center to represent your work-self and an AWS Builder ID to represent your private-self. These identities operate independently. Amazon Q Developer Pricing for more details.\nSource: Amazon Q Developer Pricing\nIn the Visual Studio Code, Open Amazon Q from the left Activity Bar. You will be presented with following screen:\nWith AWS Builder ID (no AWS account required) Choose this option to use Amazon Q for free. You do not need an AWS Account, however, you do need to sign up for an AWS Builder ID. AWS Builder ID is a personal profile that provides access to select tools and services. AWS Builder ID is free. You only pay for the AWS resources you consume in your AWS accounts, which is separate from Builder ID. You can use the same email for your AWS Builder ID and for the root user email of an AWS account.\nSelect on the first option \u0026ldquo;Use for Free\u0026rdquo; and click \u0026ldquo;Continue\u0026rdquo;. Enter your email address, click Next Enter your name, click Next Enter verification code sent to your email, click Verify Enter your password and type the CAPTCHA Enter the email address you used to register for your Builder ID, click Next Enter the password you used to register for your Builder ID, click Sign in Enter verification code sent to your email, click Verify You have successfully created a Builder ID account In the Visual Studio Code panel, select Cancel Select the option \u0026ldquo;Use for Free\u0026rdquo; and click \u0026ldquo;Continue\u0026rdquo;. Click Open Click Allow access You have successfully approved the request for AWS IDE Extensions for VS Code Once done, you can switch back to your IDE. You have successfully logged into Amazon Q with Builder ID. A Q Chat window should automatically open for you. You can now skip to [Ask Amazon Q a question in the IDE](Ask Amazon Q a question in the IDE).\nPro license with AWS IAM Identity Center Important!: If you are following this step, you will incur AWS charges. If you are just testing this out, make sure to remove the users at the end to reduce the cost.\nTo authenticate via this method, it is important to have an AWS Account with activated IAM Identity Centre. Amazon Q requires IAM Identity Center. If your AWS Organization does not have IAM Identity Center activated. The Account Administrator must first activate IAM Identity Center in this account in order to set up Amazon Q.\nRequest your account administrator to create an identity for you in the IAM Identity Center and subscribe this identity to Developer Pro.\nEnsure the Account Administrator shares two key items for you to login via Visual Studio Code:\nStart URL AWS Region These are available in the AWS Console for IAM Identity Center, in the \u0026ldquo;Settings\u0026rdquo; section you will the AWS access portal URL under Identity Source tab.\nIn Visual Studio Code, perform following steps to authenticate:\nClick on \u0026ldquo;Amazon Q\u0026rdquo; in the Status Bar below for more options like Pause auto-suggestions, open settings or Sign out. Access the Amazon Q Select Amazon Q Developer Select Get started Enter Email address, First name \u0026amp; Last name Select Continue Type Profile name Select Create You have successfully created a profile for Amazon Q Developer. Copy Start URL Access your email address Select Accept invitation At the New User Registration section Type the New password Type the Confirm password Click Set new password Enter User name (your email) Click Next Enter your Password Click Log in At the MFA Device Enrollment section Select Authenticator Application Click Next At the Set up authenticator app If you haven’t installed a virtual MFA app, please install it using the link: Authenticator Extension\nClick Show QR code Use the virtual MFA app or your device\u0026rsquo;s camera to scan the QR code. Enter Code from authenticator Click MFA Designation Click Complete Check the email Active Your Amazon Q Developer Pro Subscription On the Sign-in window in Amazon Q, select on the first option \u0026ldquo;Use with Pro license\u0026rdquo; and click \u0026ldquo;Continue\u0026rdquo; You will be asked to enter Start URL and AWS Region we noted earlier.\nClick Continue You will get a pop-up with a confirmation code, click on \u0026ldquo;Proceed to browser\u0026rdquo;.\nYou will be redirected to a web browser. Confirm the code is same and click on \u0026ldquo;Confirm and continue\u0026rdquo;. This redirects you to sign in to your Identity Center profile. Once done, simply \u0026ldquo;Allow access\u0026rdquo;. You have successfully approved the request for AWS IDE Extensions for VS Code You can now switch back to your Visual Studio Code IDE. You have successfully logged into Amazon Q with Pro license. A Amazon Q Chat window should automatically open for you. Ask Amazon Q a question in the IDE Amazon Q can be found in the activity bar in Visual Studio Code. Open your source code or a GitHub repository. Select code, right click send to Amazon Q to explain code OR open the file and ask Q to explain the code. "
},
{
	"uri": "//localhost:1313/3-getting-started/2-operational-investigations/",
	"title": "Amazon Q Developer operational investigations",
	"tags": [],
	"description": "",
	"content": "What is Amazon Q Developer Operational Investigations? Amazon Q’s operational investigations feature helps you quickly investigate and resolve incidents by surfacing relevant information, leveraging the power of generative AI technology. Amazon Q will scan metrics, logs, traces, deployment events, and other data to generate root cause hypotheses and actionable insights.\nGetting Started Open the CloudWatch console In the left navigation pane choose AI Operations choose Investigations Choose Configure for this account. (Please note: To create an investigation group and set up Amazon Q Developer operational investigations, you must be signed in to an IAM principal that has the either the AIOpsConsoleAdminPolicy or the AdministratorAccess IAM policy attached, or to an account that has similar permissions. Settings in the investigation group help you centrally manage the common properties of your investigations) Select the retention period for investigations. The default is 90 days. You can optionally customize the encryption settings. For example: if you would like to use a customer managed key instead of the default one provided by AWS. For more information, see Encryption of investigation data. (Optional) The user access section of the getting started wizard helps you understand how to set up appropriate permissions for different user roles interacting with Amazon Q Developer operational investigations. (The link will take you the documentation with more information) AWS provides three managed IAM policies: AIOpsConsoleAdminPolicy for administrators, AIOpsOperatorAccess for users who need to start and manage investigations, and AIOpsReadOnlyAccess for users who only need to view information. You can optionally connect Amazon Q Developer operational investigations to IAM Identity Center. By integrating with IAM Identity Center, you can attribute the suggestions added to the investigation feed, back to individual users. For more information, please see this link. Choose Next to continue In the “Investigation configuration” section, you can setup the IAM role that Q Developer will use to access telemetry data for its investigations. Select “Auto-create”. This will create a configure the new role with the required permissions. Under the Enhanced integration section, you can configure additional options that will further assist Q developer in performing the investigation. The next steps will briefly explain what these options do. Tags for application boundary detection: This section allows you to specify existing custom tag keys used for your applications. These tags help Amazon Q Developer refine its search when discovering resource relationships. More information can be found here. The CloudTrail section for change event detection lets Amazon Q Developer access CloudTrail data, improving its analysis of system changes and root cause hypotheses. The X-Ray for topology mapping and Application Signals for health assessment sections highlight additional AWS services that can enhance Amazon Q Developer’s capabilities. Choose “Next” to continue The last section of the wizard allows to configure third party integrations. Those include ticketing systems, chat integration, and SNS. We won’t cover those in-depth here. But if you like more information, please visit this link. Choose “Complete setup” to start the configuration. After a few seconds, you will see a message confirming “Initial Setup success” "
},
{
	"uri": "//localhost:1313/3-getting-started/",
	"title": "Getting started with Amazon Q Developer",
	"tags": [],
	"description": "",
	"content": "Getting Started with Amazon Q Developer Amazon Q Developer is a generative AI assistant embedded in your IDE, designed to accelerate all phases of the software development lifecycle (SDLC). It helps you understand unfamiliar codebases, fix bugs, generate tests, and optimize AWS resources quickly and efficiently.\nKey Features Code Development Capabilities Inline Code Completion: Write code faster with real-time suggestions. Supports 15+ languages, including Java, Python, TypeScript, Go, Rust, C#, Terraform, AWS CloudFormation, CDK, and more.\nChat Interface: Generate, refactor, and explain code; ask questions about software development directly in your IDE with natural language conversations.\nCode Analysis: Detect and fix security vulnerabilities across more than 10 languages such as Java, Python, TypeScript, C#, JavaScript, Go, Ruby, and PHP.\nCode Reference Log: See attribution for code generated by Amazon Q that\u0026rsquo;s similar to its training data, ensuring transparency and compliance.\nAdvanced AI Agents Software Development Agent (/dev): Automatically plan and implement new features across multiple files in your workspace. This agent can understand your project structure and make coordinated changes across your codebase.\nCode Transformation Agent (/transform): Instantly upgrade Java applications (Java 8/11 to Java 17 for Maven projects) in minutes, handling complex dependency updates and code modernization.\nAWS Integration AWS Resource Management: Query and manage AWS resources using natural language Infrastructure as Code: Generate CloudFormation, CDK, and Terraform configurations Cost Optimization: Analyze and optimize AWS resource costs Security Best Practices: Built-in AWS security recommendations and compliance checks Migration from Amazon CodeWhisperer ℹ️ Information: Amazon CodeWhisperer is now fully integrated into Amazon Q Developer. All its capabilities—inline suggestions, security scans, code generation—are now part of Q Developer.\nWhat This Means for You: Seamless Transition: All CodeWhisperer features are available in Amazon Q Developer Enhanced Capabilities: Additional features like /dev and /transform agents Same Free Access: Remains free for individual developers, no AWS account required Improved Performance: Better code suggestions and faster response times Broad Integration Ecosystem Amazon Q Developer is available across multiple platforms and services:\nDevelopment Environments IDEs: Visual Studio Code, JetBrains IDEs, Visual Studio, Eclipse Command Line: macOS, Linux, Ubuntu with natural language command translation AWS CloudShell: Pre-configured cloud development environment AWS Services Integration AWS Console: Direct integration across all AWS services AWS Documentation: Contextual help and guidance Amazon Connect: Customer service automation Amazon QuickSight: Business intelligence and analytics Team Collaboration Slack: Team chat integration for development discussions Microsoft Teams: Enterprise communication platform support GitLab: Source code management and CI/CD integration Why Use Amazon Q Developer? The Developer Productivity Challenge Today, over 70% of developer time is spent on repetitive or undifferentiated tasks such as:\nWriting boilerplate code Debugging and troubleshooting Understanding legacy codebases Managing infrastructure configurations Security vulnerability remediation How Amazon Q Developer Helps Amazon Q Developer reimagines the development experience by offloading these time-consuming tasks:\nFocus on Innovation Automated Code Generation: Generate functions, classes, and entire features from natural language descriptions Intelligent Refactoring: Modernize and optimize existing code automatically Context-Aware Suggestions: Get relevant code completions based on your project context Accelerate Development Multi-File Operations: Implement features that span multiple files and directories Framework Integration: Work seamlessly with popular frameworks and libraries Best Practices: Built-in guidance for coding standards and architectural patterns Enhance Quality Security Scanning: Continuous vulnerability detection and remediation Code Review: Automated code quality analysis and improvement suggestions Testing: Generate comprehensive unit tests and test cases Simplify AWS Operations Resource Management: Natural language queries for AWS resources Cost Optimization: Intelligent recommendations for cost reduction Infrastructure Automation: Generate and manage infrastructure as code Getting Started Steps For Individual Developers (Free Tier) Install the Extension: Download Amazon Q for your preferred IDE Sign In: Use your AWS Builder ID (no AWS account needed) Start Coding: Begin with simple code completion and chat features Explore Features: Try security scanning and code generation Scale Up: Consider Pro tier for advanced features For Teams and Organizations (Pro Tier) Setup IAM Identity Center: Configure centralized user management Subscribe Users: Administrator adds team members to Pro tier Configure Guardrails: Set up organizational policies and controls Deploy Across Team: Install extensions and configure team settings Monitor Usage: Track adoption and optimize team workflows Best Practices for Success Effective Prompting Be Specific: Provide clear, detailed descriptions of what you want Include Context: Share relevant information about your project and requirements Iterate: Refine your requests based on initial results Use Examples: Provide sample inputs or expected outputs when helpful Code Quality Review Generated Code: Always review and test AI-generated code Follow Standards: Ensure generated code meets your team\u0026rsquo;s coding standards Security First: Use security scanning features regularly Document Changes: Maintain clear documentation of AI-assisted modifications Team Adoption Start Small: Begin with pilot projects and gradually expand usage Share Knowledge: Create internal guides and best practices Measure Impact: Track productivity improvements and time savings Continuous Learning: Stay updated with new features and capabilities Amazon Q Developer represents a fundamental shift in how developers work, moving from manual coding to AI-assisted development that amplifies human creativity and productivity.\n"
},
{
	"uri": "//localhost:1313/4-conclusion/",
	"title": "Conclusion",
	"tags": [],
	"description": "",
	"content": "Conclusion Congratulations on completing this introduction to Amazon Q Developer! You\u0026rsquo;ve learned about the powerful AI-assisted development capabilities that can transform your software development workflow.\nKey Takeaways What You\u0026rsquo;ve Learned Amazon Q Developer Overview: Understanding the core capabilities and AI-powered features Service Tiers: Choosing between Free and Pro tiers based on your needs Integration Options: Multiple ways to access Amazon Q Developer across different platforms Advanced Features: Software Development Agent (/dev) and Code Transformation Agent (/transform) Best Practices: How to effectively use AI assistance in your development workflow Benefits You Can Expect Increased Productivity: Reduce time spent on repetitive coding tasks by up to 70% Enhanced Code Quality: Built-in security scanning and best practices guidance Faster Learning: Understand unfamiliar codebases and technologies more quickly AWS Integration: Seamless integration with AWS services and infrastructure Team Collaboration: Enhanced development workflows for teams and organizations Next Steps Continue your Amazon Q Developer learning journey by exploring these specialized workshop modules:\nDevelopment and Coding AI-Assisted Coding with Amazon Q Developer - Deep dive into code generation and completion Troubleshooting and Debugging with Amazon Q - Advanced debugging techniques with AI assistance Code Transformation and Modernization with Amazon Q - Modernize legacy applications Security and Best Practices Secure Your Code With Amazon Q Developer - Security scanning and vulnerability remediation Security Features in Amazon Q Developer - Comprehensive security capabilities Enterprise and Advanced Use Cases Amazon Q Business for Enterprise Users - Business intelligence and analytics integration Accelerate Mainframe Modernization with Amazon Q Developer Transform - Legacy system modernization Building Agentic Workflows on AWS with Amazon Q - Advanced AI agent development Generative AI Integration Building with Generative AI using PartyRock, Bedrock, and Amazon Q - Complete generative AI development stack Each module provides detailed hands-on experience to help you build production-ready applications with Amazon Q Developer.\nGetting Started Today Immediate Actions Install Amazon Q Developer in your preferred IDE Sign up for AWS Builder ID (free tier access) Try the chat interface with simple coding questions Experiment with code completion in your current projects Explore security scanning features For Teams and Organizations Evaluate Pro tier benefits for your development team Set up IAM Identity Center for centralized user management Create pilot projects to demonstrate value Develop internal best practices and guidelines Plan gradual rollout across your organization Community and Support Resources Documentation: Amazon Q Developer User Guide Community Forums: AWS Developer Forums and Stack Overflow GitHub: Sample projects and community contributions AWS Training: Official AWS training courses and certifications Stay Updated AWS Blog: Latest features and announcements AWS Events: re:Invent, Summit, and local meetups Social Media: Follow @AWSCloud for updates Newsletter: Subscribe to AWS Developer Newsletter The Future of Development Amazon Q Developer represents a fundamental shift in software development, moving from traditional manual coding to AI-assisted development that amplifies human creativity and productivity. By embracing these tools now, you\u0026rsquo;re positioning yourself and your team for the future of software development.\nThe journey doesn\u0026rsquo;t end here—it\u0026rsquo;s just the beginning. As AI continues to evolve, Amazon Q Developer will continue to add new capabilities and integrations, making development faster, more secure, and more enjoyable.\nStart your AI-assisted development journey today and experience the future of coding with Amazon Q Developer!\nCredits Workshop Authors:\nTran Doan Cong Ly - LinkedIn Profile Van Hoang Kha - LinkedIn Profile Minh Nghia - LinkedIn Profile Contributors: AWS Solutions Architects and Developer Advocates\nReferences and Additional Resources Official Documentation Amazon Q Developer User Guide Amazon Q Developer Pricing AWS Builder ID Setup Blog Posts and Articles Getting started with Amazon Q Developer operational investigations Getting Started with Amazon Q Developer Amazon Q Developer: AI-powered coding companion Video Resources Amazon Q Developer Introduction - Visual Studio Code setup Amazon Q Developer in JetBrains - JetBrains IDE setup AWS re:Invent Sessions - Latest announcements and deep dives Community Resources AWS Developer Forums Stack Overflow - Amazon Q GitHub - AWS Samples AWS Community Builders "
},
{
	"uri": "//localhost:1313/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]