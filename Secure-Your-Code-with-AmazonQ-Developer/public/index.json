[
{
	"uri": "//localhost:1313/1-features/",
	"title": "Amazon Q Developer features",
	"tags": [],
	"description": "",
	"content": "Amazon Q Developer is available across AWS environments and services, and also as a coding assistant in third party IDEs.\nMany of Amazon Q Developer’s capabilities exist in a chat interface, where you can use natural language to ask questions about AWS, get help with code, explore resources, or troubleshoot. When you chat with Amazon Q, Amazon Q uses the context of your current conversation to inform its responses. You can ask follow-up questions or refer to its response when you ask a new question.\nOther Amazon Q Developer features are available as a part of your workflows in AWS service consoles and supported IDEs. The following sections explain the different features of Amazon Q Developer that you might encounter across your AWS experience.\nMigration \u0026amp; Transfer Amazon Q Developer transformation web experience Amazon Q Developer’s transformation capabilities can help your enterprise discover, plan, and execute migration and modernization jobs for your legacy applications running on-premises or in the cloud.\nAnalytics Summarizing your data With Amazon Q Amazon QuickSight, you can utilize the Generative BI authoring experience, create executive summaries of your data, ask and answer questions of data, and generate data stories.\nManagement and governance Exploring nodes using text prompts Using AWS Systems Manager and Amazon Q, you can ask natural language questions about your managed nodes or instances. Amazon Q then uses the Systems Manager ListNodes action and creates filters based on your textual input to retrieve results.\nInvestigating operational issues (preview) Amazon Q Developer operational investigations enhance your ability to investigate and analyze resources, events, and activities across your AWS environment. By leveraging natural language processing, Amazon Q simplifies the process of understanding complex scenarios and relationships within your AWS account.\nAmazon Q Developer now helps you accelerate operational investigations across your AWS environment. Q looks for anomalies in your telemetry, surfaces related signals for you to explore, identifies potential root-cause hypothesis, and suggests next steps to help you remediate issues faster.\nBy integrating Amazon Q into your investigative workflows, you can accelerate problem solving, enhance your understanding of your AWS environment, and make more informed decisions about your infrastructure and applications.\nThe Amazon Q operational investigations feature is in preview release and is subject to change.\nTaking inventory of your AWS resources You can ask Amazon Q about your specific AWS account resources from anywhere in the AWS Management Console. You might not know where to locate relevant information about your resources, or you might be in one service console and want to access information about another service’s resources without disrupting your workflow.\nAmazon Q Developer answers your natural language questions about resources and provides deep links to those resources so you can quickly find them. You can ask Amazon Q to list a type of resource in your account, for details about a specific resource, or to list resources based on a criteria such as region or state.\nFor example, you may want to know how many Amazon EC2 instances you currently have running. In that case, you can ask Amazon Q your question in natural language, and it will provide an answer based on your specific resources.\nUse Amazon Q in the AWS Console Mobile Application Amazon Q is integrated with the AWS Console Mobile Application to answer questions about AWS. You configure access the same way that you get access to Amazon Q in the AWS Management Console.\nDiagnosing console errors In the AWS Management Console, Amazon Q Developer can diagnose common errors you receive while working with AWS services, such as insufficient permissions, incorrect configuration, and exceeding service limits.\nCompute Choosing Amazon Elastic Compute Cloud instances With so many Amazon EC2 instance types available, finding the right instance types for your workload can be time-consuming and complex. The Amazon Q instance type selector considers your use case, workload type, CPU manufacturer preference, and how you prioritize price and performance, as well as additional parameters that you can specify. It then uses this data to provide suggestions and guidance for Amazon EC2 instance types that are best suited to your new workloads.\nDatabases Writing database queries with natural language Amazon Q generative SQL uses generative AI to analyze user intent, query patterns, and schema metadata to identify common SQL query patterns directly within Amazon Redshift, accelerating the query authoring process for users and reducing the time required to derive actionable data insights.\nNetworking and content delivery Analyzing network troubleshooting You can use Amazon Q to help you diagnose network connectivity issues for applications that run in your Amazon VPCs. Amazon Q network troubleshooting can understand natural language queries, and works with Reachability Analyzer to provide relevant responses. With Amazon Q, you can ask network reachability questions in a conversational format.\nDeveloper tools Ask Amazon Q Developer questions about building at AWS and for assistance with software development. Amazon Q can explain coding concepts and code snippets, generate code and unit tests, and improve code, including debugging or refactoring.\nDeveloping code features After you explain, in natural language, the feature that you want to develop, Amazon Q can use the context of your current project to generate an implementation plan and the accompanying code. Amazon Q can help you build AWS projects or your own applications.\nGetting inline code suggestions Amazon Q provides you with code recommendations in real time. As you write code, Amazon Q automatically generates suggestions based on your existing code and comments.\nChatting about code in IDEs Within integrated development environments (IDEs), Amazon Q can answer questions related to the software development process, including conceptual questions about programming and how specific code works. You can also ask Amazon Q to update and improve code snippets from the chat panel. With multi-language support, you can chat with Amazon Q in any of the supported natural languages, including English, Mandarin, French, German, Italian, Japanese, Spanish, Korean, Hindi and Portuguese, with more languages available.\nReviewing your code for security vulnerabilities and quality issues Within IDEs, Amazon Q reviews your code for security vulnerabilities and code quality issues. Amazon Q can review as you code or review entire projects to monitor the security and quality of your applications throughout development.\nTransforming code Amazon Q can perform automated language and operating system (OS)-level upgrades for your applications.\nGenerating unit tests Amazon Q Developer provides an AI-powered unit test generation feature to help development teams improve code coverage throughout their software development lifecycle. The Amazon Q Developer agent for unit test generation is available in the following environments:\nAmazon Q Developer IDE extension.\nGitLab, as part of GitLab Duo.\nDeveloping software in Amazon CodeCatalyst Amazon Q Developer in CodeCatalyst includes generative AI features that can help users in projects in your space develop software faster. You can assign issues to Amazon Q or recommend tasks for Amazon Q. You can also ask Amazon Q to write a description or to summarize content.\nChatting about code in Amazon SageMaker AI Studio Amazon SageMaker AI Studio is a web-based experience for running ML workflows. You can chat with Amazon Q Developer inside Studio to get guidance on SageMaker AI features, troubleshoot JupyterLab errors, and get sample code.\nInteracting with the command line and AWS CloudShell Command Line Interface (CLI) After installing Amazon Q for the command line, you can use it to complete CLI commands as it populates contextually relevant subcommands, options and arguments. It provides AI-generated completions as you type in the command line. Additionally, you can use Amazon Q to write natural language instructions that are instantly translated to an executable shell code snippet. You can also ask Amazon Q complex questions, and it provides feedback and instructions based on the conversation, as well as context and information outside of the conversation. You can then provide permission to Amazon Q so it performs actions on your behalf. With multi-language support, you can chat with Amazon Q in any of the supported natural languages, including English, Mandarin, French, German, Italian, Japanese, Spanish, Korean, Hindi and Portuguese, with more languages available.\nAWS CloudShell You can also use Amazon Q CLI in AWS CloudShell to interact in natural language conversations, ask questions, and receive responses from Amazon Q in your terminal. You can get the related shell command that reduces the need to search for or remember syntax. With Amazon Q, you can receive command suggestions as you type in the terminal\nApplication integration Writing scripts to automate AWS services You may know exactly what to do with your AWS resources, and you may find yourself taking the same actions repeatedly. In that case, you can ask Amazon Q to write code that will automate the repetitive tasks.\nFor example, you may be working on a project that uses Amazon VPCs, Amazon EC2 instances, and Amazon RDS databases. In the course of your testing, you find that every time you create a Amazon VPC, spin up a server, and deploy a database, the configuration is the same. You always choose the same instance and database type, with the same options selected, using the same security groups, in subnets with the same NACL configuration. You don’t want to have to go through the same manual process every time you want to re-create your test conditions.\nYou can use Amazon Q’s Console-to-Code feature to automate a workflow instead of performing it manually every time. First, you activate Console-to-Code in the Amazon EC2 console. Then, Amazon Q records your actions as you go through the process of configuring and launching your instance. Finally, Amazon Q provides you with code, in a language of your choice, that automates the process you just performed.\nWriting ETL scripts and integrating data AWS Glue is a serverless data integration service that makes it easy for analytics users to discover, prepare, move, and integrate data from multiple sources.\nAmazon Q data integration in AWS Glue includes the following capabilities:\nChat – Amazon Q data integration in AWS Glue can answer natural language questions in English about AWS Glue and data integration domains like AWS Glue source and destination connectors, AWS Glue ETL jobs, Data Catalog, crawlers and AWS Lake Formation, and other feature documentation, and best practices. Amazon Q data integration in AWS Glue responds with step-by-step instructions, and includes references to its information sources.\nData integration code generation – Amazon Q data integration in AWS Glue can answer questions about AWS Glue ETL scripts, and generate new code given a natural language question in English.\nTroubleshoot – Amazon Q data integration in AWS Glue is purpose built to help you understand errors in AWS Glue jobs and provides step-by-step instructions, to root cause and resolve your issues.\nThird-party tools Using GitLab Duo with Amazon Q You can GitLab Duo with Amazon Q for your software development operations and source code management workflows. After setting up Amazon Q in GitLab Duo, you can invoke quick actions to automate tasks.\nCloud Financial Management Understanding your costs You can ask Amazon Q about your AWS bill and account costs in the AWS Management Console. Amazon Q can retrieve your cost data, explain costs, and analyze cost trends.\nCustomer support Getting customer support directly from Amazon Q Amazon Q can answer your questions about account activation, cost spikes, bill adjustment, fraud events, health events, and issues with your AWS resources.\nCreating a support ticket Amazon Q can help you create a support case and then connect you to a human support agent at AWS.\nAmazon Q in chat applications You can activate Amazon Q in your Slack and Microsoft Teams applications to ask questions about building at AWS.\n"
},
{
	"uri": "//localhost:1313/",
	"title": "Getting started with Amazon Q Developer",
	"tags": [],
	"description": "",
	"content": "Getting started with Amazon Q Developer What is Amazon Q Developer? Amazon Q Developer is a generative artificial intelligence (AI) powered conversational assistant that can help you understand, build, extend, and operate AWS applications. You can ask questions about AWS architecture, your AWS resources, best practices, documentation, support, and more. Amazon Q is constantly updating its capabilities so your questions get the most contextually relevant and actionable answers.\nWhen used in an integrated development environment (IDE), Amazon Q provides software development assistance. Amazon Q can chat about code, provide inline code completions, generate net new code, scan your code for security vulnerabilities, and make code upgrades and improvements, such as language updates, debugging, and optimizations.\nAmazon Q is powered by Amazon Bedrock, a fully managed service that makes foundation models (FMs) available through an API. The model that powers Amazon Q has been augmented with high quality AWS content to get you more complete, actionable, and referenced answers to accelerate your building on AWS.\nPowered by Amazon Bedrock: Amazon Q Developer is built on Amazon Bedrock and includes automated abuse detection implemented in Amazon Bedrock to enforce safety, security, and the responsible use of AI.\nGet started with Amazon Q Developer To quickly get started using Amazon Q, you can access it in the following ways:\nAWS apps and websites Add the necessary permissions to your IAM identity, and then choose the Amazon Q icon to start chatting in the AWS Management Console, AWS Documentation website, AWS website, or AWS Console Mobile Application. For more information, see Using Amazon Q Developer on AWS apps and websites.\nIDEs Download the Amazon Q extension and use your AWS Builder ID (no AWS account required) to sign in for free.\nDownload Amazon Q in Visual Studio Code\rInstallation and Configuration Guide: Download Amazon Q in JetBrains IDEs\rInstallation and Configuration Guide: Download Amazon Q in the AWS Toolkit for Visual Studio\rDownload Amazon Q in Eclipse IDEs (Preview)\rFrom your IDE, choose the Amazon Q icon to start chatting or initiate a development workflow. For more information, see Installing the Amazon Q Developer extension or plugin in your IDE.\nCommand line Download Amazon Q for command line for macOS\nDownload Amazon Q for command line for Linux AppImage\nDownload Amazon Q for command line for Ubuntu\nFor more information, see Using Amazon Q Developer on the command line.\nAmazon Q Developer in chat applications Add the AmazonQDeveloperAccess managed policy to your IAM identity and channel guardrails for Microsoft Teams or Slack applications. For more information, see Chatting with Amazon Q Developer in chat applications.\nAmazon Q Developer pricing Amazon Q Developer is available through a Free tier and the Amazon Q Developer Pro subscription. For more information, see Amazon Q Developer pricing.\n"
},
{
	"uri": "//localhost:1313/2-tiers-of-service/2-free-tier/",
	"title": "Amazon Q Developer Free tier",
	"tags": [],
	"description": "",
	"content": "Amazon Q Developer is available at the Free tier on AWS apps and websites, in the IDE, and on the command line. When you use the Free tier, access to Amazon Q Developer features is limited.\nIf you want to get started quickly with some Amazon Q Developer features, you can create an AWS Builder ID to use Amazon Q Developer in the IDE or on the command line. Builder ID is the authentication that we recommend for exploring the Free tier of Amazon Q Developer.\nTo use Amazon Q Developer at the Free tier on AWS websites, sign in to your AWS account to try chat and other features in the AWS Management Console. Not all Amazon Q console features are available at the Free tier.\nAt the Free tier, your content may be used to improve Amazon Q Developer.\nTo upgrade from the Free tier to the Pro tier, you must subscribe to Amazon Q Developer.\nThe following table describes what features of Amazon Q Developer at the Free tier are available to you, depending on your sign in or authentication method:\nFree tier access type Amazon Q Developer feature AWS Builder ID IAM Identity Center IAM federation/principals Amazon Q on AWS websites ❌No ✅Yes ✅Yes Amazon Q Developer in the IDE ✅Yes ❌No ❌No Amazon Q Developer on the command line ✅Yes ❌No ❌No For details about the features available at the Free tier, see the Amazon Q Developer pricing page.\n"
},
{
	"uri": "//localhost:1313/2-tiers-of-service/1-pro-tier/",
	"title": "Amazon Q Developer Pro tier",
	"tags": [],
	"description": "",
	"content": "With a paid subscription to the Amazon Q Developer Pro tier, your workforce users can access all features of Amazon Q Developer, including ML-assisted software development in your IDE and chatting with Amazon Q in the AWS Management Console without hard monthly limits.\nThis section describes how to set up and manage Amazon Q Developer Pro tier subscriptions.\nFor more information on what you can access with the Pro tier, see the Amazon Q Developer pricing page.\nSubscribing users to Amazon Q Developer Pro To subscribe users to Amazon Q Developer Pro, you have three options depending on the type of AWS account you have:\nIf you have a standalone account, see Subscribe users in a standalone account. Use these instructions if you want to quickly evaluate the features of Amazon Q.\nIf you have a management in AWS Organizations, see Subscribe users to Amazon Q Developer Pro in a management account.\nIf you have a member account in AWS Organizations, see Subscribe users to Amazon Q Developer Pro in a member account.\nRegardless of the type of account you have, you might need to work across multiple AWS Regions and AWS accounts to subscribe users. For more information, see Subscribe users to Amazon Q Developer Pro across AWS Regions and Subscribe users to Amazon Q Developer Pro across your organization.\nNot sure what member and management accounts are? See Terminology and concepts for AWS Organizations in the AWS Organizations User Guide for explanations.\nFor general information about AWS Organizations, see What is AWS Organizations? in the AWS Organizations User Guide.\nManaging Amazon Q Developer Pro subscriptions This section helps you understand and manage Amazon Q Developer subscriptions, including configuring Amazon Q Developer features, unsubscribing users, and troubleshooting common subscription issues to ensure your users have access to Amazon Q Developer features.\nTopics Amazon Q Developer Pro Region support\nAmazon Q Developer Pro subscription billing\nAmazon Q Developer subscription statuses\nManaging account details in Amazon Q Developer\nManaging the encryption method in Amazon Q Developer\nAmazon Q Developer profiles\nEnabling profile sharing in Amazon Q Developer\nTroubleshooting Amazon Q Developer Pro subscriptions\nViewing an aggregated list of Amazon Q Developer subscriptions\nUnsubscribing users from Amazon Q Developer Pro\n"
},
{
	"uri": "//localhost:1313/2-tiers-of-service/",
	"title": "Tiers of service for Amazon Q Developer",
	"tags": [],
	"description": "",
	"content": "When you use Amazon Q Developer, you either use Amazon Q Developer Pro, which is a paid subscription service, or you use Amazon Q Developer at the Free tier. Review the following information to understand what\u0026rsquo;s offered at each tier.\nAmazon Q Developer Pro tier – The Pro tier is a paid version of the Amazon Q Developer service. This gives you access to advanced features, such as customization, as well as higher usage limits. To use Amazon Q Developer Pro, you must be a user in IAM Identity Center, and your administrator must subscribe you to Amazon Q Developer Pro.\nAmazon Q Developer Free tier – Amazon Q Developer offers a perpetual Free tier with monthly limits, including for users authenticating with AWS Builder ID. The features available to you depends on your interface and on how you authenticate.\n"
},
{
	"uri": "//localhost:1313/3-getting-started/1-in-visual-studio-code/",
	"title": "Amazon Q Developer in Visual Studio Code",
	"tags": [],
	"description": "",
	"content": "Install the Amazon Q extension in Visual Studio Code Visual Studio Code is a lightweight but powerful source code editor which runs on your desktop and is available for Windows, macOS and Linux. Ensure you have installed Visual Studio Code for your operating system. You can find the setup steps in their official documentation.\nInstall the Amazon Q extension Open Visual Studio Code Click on Extensions on the left activity bar. In the extensions, search for \u0026ldquo;Amazon Q\u0026rdquo;. Select Install the extension, restart/reload VSCode if required. Authenticate You have 2 options to sign-in and this blog explores both the authentication methods:\nwith Builder ID for Individual users with Free Tier with AWS IAM Identity Center for Professional users with Pro Tier You might use a workforce identity in IAM Identity Center to represent your work-self and an AWS Builder ID to represent your private-self. These identities operate independently. Amazon Q Developer Pricing for more details.\nSource: Amazon Q Developer Pricing\nIn the Visual Studio Code, Open Amazon Q from the left Activity Bar. You will be presented with following screen:\nWith AWS Builder ID (no AWS account required) Choose this option to use Amazon Q for free. You do not need an AWS Account, however, you do need to sign up for an AWS Builder ID. AWS Builder ID is a personal profile that provides access to select tools and services. AWS Builder ID is free. You only pay for the AWS resources you consume in your AWS accounts, which is separate from Builder ID. You can use the same email for your AWS Builder ID and for the root user email of an AWS account.\nSelect on the first option \u0026ldquo;Use for Free\u0026rdquo; and click \u0026ldquo;Continue\u0026rdquo;. Enter your email address, click Next Enter your name, click Next Enter verification code sent to your email, click Verify Enter your password and type the CAPTCHA Enter the email address you used to register for your Builder ID, click Next Enter the password you used to register for your Builder ID, click Sign in Enter verification code sent to your email, click Verify You have successfully created a Builder ID account In the Visual Studio Code panel, select Cancel Select the option \u0026ldquo;Use for Free\u0026rdquo; and click \u0026ldquo;Continue\u0026rdquo;. Click Open Click Allow access You have successfully approved the request for AWS IDE Extensions for VS Code Once done, you can switch back to your IDE. You have successfully logged into Amazon Q with Builder ID. A Q Chat window should automatically open for you. You can now skip to [Ask Amazon Q a question in the IDE](Ask Amazon Q a question in the IDE).\nPro license with AWS IAM Identity Center Important!: If you are following this step, you will incur AWS charges. If you are just testing this out, make sure to remove the users at the end to reduce the cost.\nTo authenticate via this method, it is important to have an AWS Account with activated IAM Identity Centre. Amazon Q requires IAM Identity Center. If your AWS Organization does not have IAM Identity Center activated. The Account Administrator must first activate IAM Identity Center in this account in order to set up Amazon Q.\nRequest your account administrator to create an identity for you in the IAM Identity Center and subscribe this identity to Developer Pro.\nEnsure the Account Administrator shares two key items for you to login via Visual Studio Code:\nStart URL AWS Region These are available in the AWS Console for IAM Identity Center, in the \u0026ldquo;Settings\u0026rdquo; section you will the AWS access portal URL under Identity Source tab.\nIn Visual Studio Code, perform following steps to authenticate:\nClick on \u0026ldquo;Amazon Q\u0026rdquo; in the Status Bar below for more options like Pause auto-suggestions, open settings or Sign out. Access the Amazon Q Select Amazon Q Developer Select Get started Enter Email address, First name \u0026amp; Last name Select Continue Type Profile name Select Create You have successfully created a profile for Amazon Q Developer. Copy Start URL Access your email address Select Accept invitation At the New User Registration section Type the New password Type the Confirm password Click Set new password Enter User name (your email) Click Next Enter your Password Click Log in At the MFA Device Enrollment section Select Authenticator Application Click Next At the Set up authenticator app If you haven’t installed a virtual MFA app, please install it using the link: Authenticator Extension\nClick Show QR code Use the virtual MFA app or your device\u0026rsquo;s camera to scan the QR code. Enter Code from authenticator Click MFA Designation Click Complete Check the email Active Your Amazon Q Developer Pro Subscription On the Sign-in window in Amazon Q, select on the first option \u0026ldquo;Use with Pro license\u0026rdquo; and click \u0026ldquo;Continue\u0026rdquo; You will be asked to enter Start URL and AWS Region we noted earlier.\nClick Continue You will get a pop-up with a confirmation code, click on \u0026ldquo;Proceed to browser\u0026rdquo;.\nYou will be redirected to a web browser. Confirm the code is same and click on \u0026ldquo;Confirm and continue\u0026rdquo;. This redirects you to sign in to your Identity Center profile. Once done, simply \u0026ldquo;Allow access\u0026rdquo;. You have successfully approved the request for AWS IDE Extensions for VS Code You can now switch back to your Visual Studio Code IDE. You have successfully logged into Amazon Q with Pro license. A Amazon Q Chat window should automatically open for you. Ask Amazon Q a question in the IDE Amazon Q can be found in the activity bar in Visual Studio Code. Open your source code or a GitHub repository. Select code, right click send to Amazon Q to explain code OR open the file and ask Q to explain the code. "
},
{
	"uri": "//localhost:1313/3-getting-started/2-operational-investigations/",
	"title": "Amazon Q Developer operational investigations",
	"tags": [],
	"description": "",
	"content": "What is Amazon Q Developer Operational Investigations? Amazon Q’s operational investigations feature helps you quickly investigate and resolve incidents by surfacing relevant information, leveraging the power of generative AI technology. Amazon Q will scan metrics, logs, traces, deployment events, and other data to generate root cause hypotheses and actionable insights.\nGetting Started Open the CloudWatch console In the left navigation pane choose AI Operations choose Investigations Choose Configure for this account. (Please note: To create an investigation group and set up Amazon Q Developer operational investigations, you must be signed in to an IAM principal that has the either the AIOpsConsoleAdminPolicy or the AdministratorAccess IAM policy attached, or to an account that has similar permissions. Settings in the investigation group help you centrally manage the common properties of your investigations) Select the retention period for investigations. The default is 90 days.\nYou can optionally customize the encryption settings. For example: if you would like to use a customer managed key instead of the default one provided by AWS. For more information, see Encryption of investigation data. (Optional) The user access section of the getting started wizard helps you understand how to set up appropriate permissions for different user roles interacting with Amazon Q Developer operational investigations. (The link will take you the documentation with more information) AWS provides three managed IAM policies: AIOpsConsoleAdminPolicy for administrators, AIOpsOperatorAccess for users who need to start and manage investigations, and AIOpsReadOnlyAccess for users who only need to view information. You can optionally connect Amazon Q Developer operational investigations to IAM Identity Center. By integrating with IAM Identity Center, you can attribute the suggestions added to the investigation feed, back to individual users. For more information, please see this link. Choose Next to continue\nIn the “Investigation configuration” section, you can setup the IAM role that Q Developer will use to access telemetry data for its investigations. Select “Auto-create”. This will create a configure the new role with the required permissions. Under the Enhanced integration section, you can configure additional options that will further assist Q developer in performing the investigation. The next steps will briefly explain what these options do.\nTags for application boundary detection: This section allows you to specify existing custom tag keys used for your applications. These tags help Amazon Q Developer refine its search when discovering resource relationships. More information can be found here. The CloudTrail section for change event detection lets Amazon Q Developer access CloudTrail data, improving its analysis of system changes and root cause hypotheses. The X-Ray for topology mapping and Application Signals for health assessment sections highlight additional AWS services that can enhance Amazon Q Developer’s capabilities. Choose “Next” to continue\nThe last section of the wizard allows to configure third party integrations. Those include ticketing systems, chat integration, and SNS. We won’t cover those in-depth here. But if you like more information, please visit this link.\nChoose “Complete setup” to start the configuration. After a few seconds, you will see a message confirming “Initial Setup success” "
},
{
	"uri": "//localhost:1313/3-getting-started/",
	"title": "Getting started with Amazon Q Developer",
	"tags": [],
	"description": "",
	"content": "You can use Amazon Q Developer to enable completions for hundreds of popular CLIs like git, npm, docker, and aws. Amazon Q for command line integrates contextual information, providing Amazon Q with an enhanced understanding of your use case, enabling it to provide relevant and context-aware responses. As you begin typing, Amazon Q populates contextually relevant subcommands, options, and arguments.\nYou can install Amazon Q for command line on macOS and specific Linux environments, including AppImage and Ubuntu packages, which provides features such as autocompletion, Amazon Q chat, and inline zsh completion. You can work with Amazon Q CLI to do the following:\nCommand line interface to chat through natural language conversations, questions, and responses within your terminal environment.\nTranslate natural language instructions to executable shell code snippets.\nInline suggestions as you type in your command prompt, with completions to popular CLIs.\n"
},
{
	"uri": "//localhost:1313/4-conclusion/",
	"title": "Conclution",
	"tags": [],
	"description": "",
	"content": "In conclusion, observability stands as a critical capability for modern, complex systems. It empowers us to move beyond simple monitoring by continuously generating and enabling the discovery of actionable insights derived from system signals. This allows for a profound understanding of a system\u0026rsquo;s internal state through its external manifestations, facilitating informed and timely interventions.\nThe foundational three pillars of observability – metrics, logs, and traces – each contribute uniquely to this understanding:\nMetrics provide quantitative, time-series data, essential for trend identification, capacity planning, and predictive analysis. Logs offer immutable, timestamped records of discrete events, proving invaluable for diagnosing emergent and unpredictable behaviors. Traces map the end-to-end journey of requests across distributed systems, revealing latency bottlenecks and the intricate flow of operations. On the AWS platform, these pillars are comprehensively addressed through CloudWatch Metrics, CloudWatch Logs, and AWS X-Ray. Working in synergy, these services constitute a robust observability solution, delivering in-depth visibility into the behavior, performance, and overall reliability of AWS environments and the applications they host. By effectively leveraging these tools, users can proactively manage their systems, optimize performance, and ensure a resilient and dependable operational landscape.\nNext Steps Continue your Amazon ECS learning journey by exploring these specialized workshop modules:\nAuto Scaling - Learn to dynamically scale your applications Networking - Master ECS networking concepts and implementations Observability - Implement comprehensive monitoring solutions Security - Implement robust security controls and best practices Automation - Streamline deployment workflows Storage - Integrate Amazon EFS for persistent storage Each module provides detailed hands-on experience to help you build production-ready ECS applications.\nCredits Le Minh Nghia - https://www.linkedin.com/in/minhnghia2k3/\nTran Doan Cong Ly - https://www.linkedin.com/in/trandoancongly/\nReferences Container Insights - https://catalog.workshops.aws/ecs-immersion-day/en-US/50-observability/container-insights\nOpenTelemetry - https://catalog.workshops.aws/ecs-immersion-day/en-US/50-observability/open-telemetry\n"
},
{
	"uri": "//localhost:1313/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]